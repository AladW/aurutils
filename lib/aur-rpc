#!/bin/bash
# aur-rpc - send GET requests to aurweb
# https://bugs.archlinux.org/task/49089
readonly argv0=rpc
readonly AUR_LOCATION=${AUR_LOCATION:-https://aur.archlinux.org}
readonly PS4='+(${BASH_SOURCE}:${LINENO}):${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

info() {
    awk -v rpc="$AUR_LOCATION/rpc/?v=5&type=info" '{
        if (NR == 1)
            printf "%s&arg[]=%s", rpc, $0
        else if (NR % 150 == 0)
            printf "\n%s&arg[]=%s", rpc, $0
        else if (NR > 1)
            printf "&arg[]=%s", $0
    } END {
        printf "\n"
    }'
}
readonly -f info

search() {
    awk -v rpc="$AUR_LOCATION/rpc/?v=5&type=search&by=$1&arg" '{
        printf "%s=%s\n", rpc, $0
    }'
}
readonly -f search

cat_ifne() {
    if [[ -n $* && -e $1 ]]; then
        cat -- "$@"
    fi
}
readonly -f cat_ifne

dl_stdin() {
    if type -P aria2c >/dev/null; then
        aria2c -d "$tmp"/aria2 -i -      \
            --console-log-level=error    \
            --download-result=hide       \
            --show-console-readout=false \
            --stderr=true || return

        cat_ifne "$tmp"/aria2/*
    else
        wget --quiet -i - -O -
    fi
}
readonly -f dl_stdin

trap_exit() {
    if ! [[ -o xtrace ]]; then
        rm -rf "$tmp"
    fi
}
readonly -f trap_exit

usage() {
    printf >&2 'usage: %s [-t type] [-b by] package [package...]\n' "$argv0"
    exit 1
}
readonly -f usage

unset by type
while getopts :b:t: opt; do
    case $opt in
        b) by=$OPTARG   ;;
        t) type=$OPTARG ;;
        *) usage        ;;
    esac
done
shift $((OPTIND - 1))
OPTIND=1

tmp=$(mktemp -dt "$argv0".XXXXXXXX) || exit
trap 'trap_exit' EXIT

case $type in
      info) query() { info; }                      ;;
    search) query() { search "${by:-name-desc}"; } ;;
         *) usage ;;
esac

jq -R -r '@uri' | query | dl_stdin

# vim: set et sw=4 sts=4 ft=sh:
