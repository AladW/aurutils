#!/bin/bash
var_tmp=$(mktemp -d --tmpdir="${TMPDIR:-/var/tmp/}") || exit
trap 'rm -rf -- "$var_tmp"' EXIT

cat >"$var_tmp"/pacman.conf <<EOF
[options]
HoldPkg = pacman-git glibc
Architecture = auto
CheckSpace
CacheDir = $var_tmp
CacheDir = /var/cache/pacman/pkg
[core]
Include = /etc/pacman.d/mirrorlist
[extra]
Include = /etc/pacman.d/mirrorlist
[community]
Include = /etc/pacman.d/mirrorlist
[custom]
SigLevel = Optional TrustAll
Server = file://$var_tmp
EOF

# create local repository
repo-add "$var_tmp"/custom.db.tar || exit

test_package=(
    'python-pyalsaaudio' # split packages - independent
    'fasm-linux-git' 'hnwatch' # split packages - pkgbase does not match pkgname
    'ros-build-tools' # empty make/depends
    'curr' # dependency order (#414)
    'gimp-plugin-separate+' # Special characters
)

test_package_big=(
    'clion' # split package - multiple packages from same package base
    'libc++' 'libc++-abi' # split package - depends on package from same package base
    'openrct2-git' # make/depends_arch
    'mingw-w64-gcc-base' # cyclic dependencies - required removal of makedeps
)

test_package_huge=(
    'plasma-git-meta' # 100+ depends
    'ros-lunar-desktop' # 250+ depends 
)

sync_args=(
    --rmdeps --no-confirm --no-view --repo=custom
    --margs --skippgpcheck
    --config "$var_tmp"/pacman.conf
    --pacman-conf "$var_tmp"/pacman.conf    
)
for p in "${test_package[@]}"; do
    { AURDEST="$var_tmp" aur sync "${sync_args[@]}" "$p" && \
        pacman --config "$var_tmp"/pacman.conf -Si custom/"$p"
    } || exit
done
