.TH AUR-CHROOT 2020-10-12 AURUTILS
.SH NAME
aur\-chroot \- build packages with systemd-nspawn
.
.SH SYNOPSIS
.SY "aur chroot"
.OP \-D directory
.OP \-C pacman_conf
.OP \-M makepkg_conf
.OP \-\-build
.OP \-\-update
.OP \-\-packagelist
.OP \-\-prefix
.OP \-\-
.RI [ "makechrootpkg args" ]
.YS
.
.SH DESCRIPTION
Build packages inside a
.BR systemd\-nspawn (1)
container.
.
.SH OPTIONS
All arguments after
.B \-\-
are passed to \fBmakechrootpkg\fR.
.
.TP
.BR \-B ", " \-\-build
Build a package inside the container.
.
.TP
.BR \-U ", " \-\-update
Update or create the
.B /root
copy of the container.
.
.TP
.BI \-D " DIR" "\fR,\fP \-\-directory=" DIR
The base directory for containers. This directory usually contains a
.B /root
subdirectory that serves as template for user containers (named after
.IR $SUDO_USER ,
or
.B /copy
if unset).
.IP
.B Note:
If the
.B \-T
parameter is specified to
.BR makechrootpkg ,
the user container has a random name and is removed on build
completion.
.
.TP
.BI \-C " FILE" "\fR,\fP \-\-pacman\-conf=" FILE
The
.BR pacman.conf (5)
file used inside the container. Defaults to
.IR /usr/share/devtools/pacman\-extra.conf .
.IP
This file is processed with
.B pacman\-conf
to bind-mount listed
.B file://
repositories.
.
.TP
.BI \-M " FILE" "\fR,\fP \-\-makepkg\-conf=" FILE
The
.BR makepkg.conf (5)
file used inside the container. Defaults to devtools'
.IR makepkg\-<machine>.conf .
.
.TP
.B \-\-bind
Bind a directory read-only to the container. (\fBmakechrootpkg \-D\fR)
.
.TP
.B \-\-bind\-rw
Bind a directory read-write to the container. (\fBmakechrootpkg \-d\fR)
.
.TP
.B \-\-packagelist
List the package filenames that would be produced without
building.
.RB ( "makepkg \-\-packagelist" )
using the
.BR makepkg.conf (5)
file specified with the
.B \-\-makepkg\-conf
option.
.
.TP
.B \-\-prefix
The path component
.B <prefix>
in the pacman configuration
.BR /usr/share/devtools/pacman\-<prefix>.conf .
Defaults to
.BR extra .
.
.SH ENVIRONMENT
Packages are placed in the directory specified in
.BR PKGDEST .
If unset, the current directory
.RB ( $PWD )
is used. See also
.BR makepkg.conf (5).
.
.SH NOTES
.SS Building with makechrootpkg
Changes to the pacman database are
.I not
propagated from the container to the local system. Packages must be
installed and updated separately, typically through
.BI "pacman \-Syu " package_name\fR.
.PP
Package conflicts inside the container must be resolved manually, as
.B makechrootpkg
uses
.B "makepkg \-\-noconfirm \-s"
internally. For example, to replace
.I gcc
with
.IR gcc\-multilib ,
run
.B "arch\-nspawn /var/lib/aurbuild/root pacman \-S gcc\-multilib"
as root.
.
.SS Accessing a local repository
To install packages from the local repository (for example, on
dependency resolution with
.BR "makepkg \-s" ,
the container requires read access to the host directory where it is
located. This is ensured through a
.IR "bind mount" .
.
.SS Avoiding password prompts
.BR makepkg (8)
must be run as a regular user as of version 4.2, with privileged
operations done via
.BR sudo (8).
It follows that
.BR aur\-chroot (1)
and
.BR aur\-build (1)
can not run directly as root. To avoid password prompts,
.BR sudoers (5)
can be used instead. For example, if
.BR aur\-chroot (1)
is run as the
.I archie
user, create the following sudoers policy:
.EX

  archie ALL = (root) NOPASSWD: SETENV: /usr/bin/makechrootpkg
  archie ALL = (root) NOPASSWD: /usr/bin/mkarchroot, /usr/bin/arch-nspawn

.EE
.SY Note:
Should the rule only apply to specific hosts, replace
.B ALL
with the respective
.IR hostname .

.SS Using ccache and distcc
As in the example above, install the required packages:
.EX

  # arch-nspawn /var/lib/aurbuild/root pacman \-S ccache distcc

.EE
Ensure write access to
.B ccache
directories on the host:
.EX

  # aur chroot -- -d /home/_ccache:/build/.ccache -cu

.EE
Necessary
.BR makepkg (1)
options may be set in a specified (\-M)
.BR makepkg.conf (5)
file. See GitHub issue #334 for details.
.
.SS Building for a different architecture
To build packages for a different architecture, prepend
.BI setarch " arch"
to the
.B aur\-build
command line.
.
The target architecture must be supported both by the host (run
.B "setarch \-\-list"
for an approximation), and have a matching
.BR makepkg.conf (5)
file available in
.B /usr/share/devtools
(such as
.I /usr/share/devtools/makepkg\-i686.conf
for
.IR i686 ).
.TP
.B Note:
Building for other CPU architectures may be done through
QEMU, for example with
.BR proot (1).
.
.SH SEE ALSO
.BR aur (1),
.BR aur\-build (1),
.BR pacconf (1),
.BR pacman (1),
.BR makepkg.conf (5),
.BR pacman.conf (5),
.BR setarch (8)
.
.SH AUTHORS
.MT https://github.com/AladW
Alad Wenter
.ME

.\" vim: set textwidth=72:
