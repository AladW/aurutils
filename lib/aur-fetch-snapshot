#!/bin/bash
# aur-fetch-snapshot - retrieve build files using tar archives
set -o errexit
readonly argv0=fetch-snapshot
readonly startdir=$PWD
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'

# default options
log=stdout

dl_stdin() {
    parallel -j +5 --halt soon,fail=1 wget -i -
}

tar_no_mode_diff() {
    if [[ -d $2/${1%%.tar*} ]]; then
        LC_MESSAGES=C tar -df "$1" -C "$2" | grep -Evq '(Mode|Uid|Gid)'
    else
        return 1
    fi
}

usage() {
    printf >&2 'usage: %s [-L log_dir]\n' "$argv0"
    exit 1
}

trap_exit() {
    if [[ ! -o xtrace ]]; then
        rm -rf "$tmp"
    fi
}

while getopts :L: opt; do
    case $opt in
        L) log_dir=$OPTARG
           log=directory ;;
        *) usage ;;
    esac
done
shift $((OPTIND - 1))
OPTIND=1

tmp=$(mktemp -dt "$argv0".XXXXXXXX)
trap trap_exit EXIT

# set filters
case $log in
    directory) diff_log() { tee -a "$log_dir/$1".diff | diffstat -Ckq -f3; } ;;
       stdout) diff_log() { tee; } ;;
esac

cd "$tmp"
dl_stdin

for a in ./*.tar.gz; do
    if [[ -f $a ]]; then
        tar -kxf "$a"
    else
        continue
    fi

    x=${a%%.tar.gz}

    if tar_no_mode_diff "$a" "$startdir"; then
        diff -ur "$startdir/$x" "$x" | diff_log "$x"
    fi

    cp -af "$x" "$startdir"
done

# vim: set et sw=4 sts=4 ft=sh:
