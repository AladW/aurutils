#!/bin/bash
readonly argv0=src-deps
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
set -o pipefail

deps_paired() {
    awk -v FS='[<=>]' '
    /pkgbase/ {
        read = 1; pb = $2

        printf("%s\t%s\n", pb, pb)
    } {
        if (read && $0 ~ /^\t(make|check)?depends/)
            printf("%s\t%s\n", pb, $2)

        if ($0 ~ /^$/)
            read = 0    # split package
    }' "$@"
}

# XXX Output of form " pkgname\tpkgbase"
base() {
    awk -v FS='[<=>]' '
    /pkgbase/ {
        pb = $2
    }
    /pkgname/ {
        printf("%s\t%s\n", $2, pb)
    }' "$@"
}

sub() {
    awk 'NR == FNR {
        x[$1] = $2; next
    } {
        if ($1 in x && !(x[$1] in seen)) {
            print x[$1]; seen[x[$1]];
        }
    }' "$@"
}

trap_exit() {
    if [[ ! -o xtrace ]]; then
        rm -rf "$tmp"
    fi
}

usage() {
    plain "usage: $argv0 pkgname..."
    exit 1
}

readonly -f deps_paired base sub trap_exit usage
source /usr/share/makepkg/util.sh || exit

if [[ -t 2 && ! -o xtrace ]]; then
    colorize
fi

while getopts h OPT; do
    case $OPT in
        *) usage ;;
    esac
done

shift "$((OPTIND - 1))"
OPTIND=1

if ((!$#)); then
    usage
fi

tmp=$(mktemp -t "$argv0".XXXXXXXX) || exit
trap 'trap_exit' EXIT

mapfile -t arg_path < <(readlink -e -- "$@")

if [[ -n ${arg_path[*]} ]]; then
    find "${arg_path[@]}" -maxdepth 1 -type f -name .SRCINFO -print0 | xargs -0 cat > "$tmp"
fi

if [[ -s "$tmp" ]]; then
    deps_paired "$tmp" | tsort | sub <(base "$tmp") - | grep -Fxf <(printf -- '%s\n' "${@##*/}") | tac
fi

# vim: set et sw=4 sts=4 ft=sh:
