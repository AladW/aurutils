#!/bin/bash
# shellcheck disable=SC2016
# aur-srcver - update and print package revisions
readonly argv0=srcver
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
readonly startdir=$PWD

get_pkgbuild_info() {
    env -C "$1" -i bash -c '
        PATH= source PKGBUILD

        source="${source#*::}"                           # remove custom name of a source
        source="${source#*+}"                            # keep only one protocol (TODO: do we need many?)

        branch="${source#*#branch=}"                     # detect custom branch if it is specified
        source="${source%#*}"                            # remove branch from the source string
        [[ "$branch" == "$source" ]] && branch="HEAD"    # use HEAD if custom branch is not specified

        printf "%s\\t%s\\t%s\\n" "${pkgbase:-$pkgname}" "$source" "$branch"
    '
}

find_pkgbuild_path() {
    find "$@" -maxdepth 1 -type f -name PKGBUILD -printf '%h\n'
}

usage() {
    printf 'usage: %s path [path...]\n' "$argv0" >&2
    exit 1
}

if ((!$#)); then
    usage
fi

# XXX trickery for hyphen and absolute path arguments
mapfile -t arg_path < <(readlink -e -- "$@")

find_pkgbuild_path "${arg_path[@]}" | while read -r; do
    get_pkgbuild_info "$REPLY" | while IFS=$'\t' read -r pkgname source branch; do
        latest="$(git ls-remote "$source" "$branch" | awk '{print $1}')"
        printf "%s\\t%s\\n" "$pkgname" "$latest"
    done
done

# vim: set et sw=4 sts=4 ft=sh:
