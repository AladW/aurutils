.TH AURSYNC 1 2016-05-06 AURUTILS
.SH Name
aursync \- download and build aur packages automatically

.SH SYNOPSIS
.SY aursync
.OP \-c
.OP \-B newdir
.OP \-u
.OP \-dfLnstTjJzZ
.OP pkgname...
.YS

.SH DESCRIPTION
Download and build packages automatically to a local
repository. Package names serve as arguments.

If \fIvifm \fRis installed, the downloaded files are shown using vifm
and can be edited. If not, the files are shown in \fIless\fR, or
\fI$PAGER\fR if configured.

Each repository must have a \fICacheDir\fR which matches
\fIServer\fR. See \fBaurutils(7)\fR for details.

.SH OPTIONS
.B \-c, --chroot
.RS
Build packages with makechrootpkg. (\fIaurbuild -c\fR)
.RE

.B \-s, --sign
.RS
Sign built packages and the database with gpg. (\fIaurbuild -s\fR)
.RE

.B \-t, --tar
.RS
Download AUR snapshots (\fI.tar.gz\fR) instead of cloning git
directories.
.RE

.B \-u, --update
.RS
Update AUR packages in a selected local repository.
.RE

.B \--ignore
.RS
Skip package names in pacman's \fIIgnorePkg \fRdirective.
.RE

.B \--insecure
.RS
Do not view downloaded files before building.
.RE

.B \--nobuild
.RS
Only download source files, do not build anything.
.RE

.B \--nodeps
.RS
Do not resolve dependencies.
.RE

.B \--nofetch
.RS
Do not update existing git directories.
.RE

.B \--noversion
.RS
Disable version checking for packages in the queue.
.RE

.SS makepkg
.B \-f
.RS
Overwrite built packages. (\fImakepkg -f\fR)
.RE

.B \-L
.RS
Save makepkg output. (\fImakepkg -L\fR)
.RE

.B \-n
.RS
Do not wait for user input. (\fImakepkg --noconfirm\fR)
.RE

.B \-r
.RS
Remove dependencies installed during the build procss. (\fImakepkg -r\fR)
.RE

.SS makechrootpkg
.B \-B
.RS
Bind a directory read-only. (\fImakechrootpkg -D\fR)
.RE

.B \-n
.RS
Check a built package with namcap. (\fImakechrootpkg -n\fR)
.RE

.B \-T
.RS
Build in a temporary directory. (\fImakechrootpkg -T\fR)
.RE

.B \-j
.RS
Compress the resulting database with bzip2(1).
.RE

.B \-J
.RS
Compress the resulting database with xz(1).
.RE

.B \-z
.RS
Compress the resulting database with gzip(1).
.RE

.B \-Z
.RS
Compress the resulting database with compress(1).
.RE

.SH ENVIRONMENT
.B AURDEST
.RS
Determines where build files will be cloned (default:
\fI$XDG_CACHE_HOME/aursync\fR).
.RE

.B TMPDIR
.RS
Parent directory for temporary files.
.RE

.SH NOTES
Version checks assume there are no mismatches between \fI.SRCINFO
\fRand \fIPKGBUILD \fRfiles. When enabled (\fI--noversion\fR is not
specified), build files are only retrieved if the remote (RPC) version
is newer than a version in the pacman sync database.

The depends_\fIarch \fRarray (as introduced with pacman 4.2) is merged
with regular depends in the RPC. \fBaursync \fRworkarounds this by
stripping the \fIlib32- \fRsuffix from packages and \fIgcc-multilib
\fRwhen the i686 architecture is detected.

.SH SEE ALSO
.BR aria2c (1),
.BR aurbuild (1),
.BR aurchain (1),
.BR aursearch (1),
.BR aursift (1),
.BR git (1),
.BR less (1),
.BR pacconf (1),
.BR repofind (1)
.BR vifm (1),
.BR pacman.conf (5),
.BR aurutils (7)

.SH AUTHORS
.MT https://github.com/AladW
Alad Wenter
.ME
