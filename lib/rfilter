#!/bin/bash
readonly argv0=aursift
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
readonly arch_repo=(core extra testing community{,-testing} multilib{,-testing})

declare -A pkgset

provides() {
    expac '%n %R %S' -Sv -- "$@" | awk '{
        for(i = 2; i <= NF; ++i) {
            printf("%s\t%s\n", $1, $i) | "sort -u"
        }
    }'
}

usage() {
    plain "usage: $argv0 [-d repo]"
    exit 1
}

readonly -f provides usage

source /usr/share/makepkg/util.sh || exit

if [[ -t 2 && ! -o xtrace ]]; then
    colorize
fi

unset repo siftargs user_repo
while getopts d: OPT; do
    case $OPT in
        d) user_repo+=("$OPTARG") ;;
        *) usage ;;
    esac
done
shift $((OPTIND - 1))
OPTIND=1

if ! [[ -v user_repo ]]; then
    user_repo=("${arch_repo[@]}")
fi

readarray -t all < /dev/stdin

for p in "${all[@]}"; do
    siftargs+=("--satisfies=$p")
    pkgset[$p]=1
done

if [[ ${pkgset[*]} ]]; then
    for p in "${user_repo[@]}"; do
        siftargs+=("--repo=$p")
    done
else
    error "$argv0: no data available"
    exit 61
fi

# https://github.com/andrewgregory/pacutils/issues/3
readarray -t query < <(pacsift --sync --exact "${siftargs[@]}" <&-)

if [[ ${query[*]} ]]; then
    while read -r p v; do
        p=${p#*/}

        if [[ ${pkgset[$p]} ]]; then
            repo+=("$p")
        fi

        if [[ ${pkgset[$v]} ]]; then
            plain "virtual dependency $v provided by $p"
            repo+=("$v")
        fi
    done < <(provides "${query[@]}")
fi

grep -Fxvf <(printf '%s\n' "${repo[@]}") <(printf '%s\n' "${all[@]}")

# vim: set et sw=4 sts=4 ft=sh:
