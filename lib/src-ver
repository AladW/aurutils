#!/bin/bash
readonly argv0=aursrcver
readonly PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
readonly startdir=$PWD

get_pkgbuild_info() {
    env -C "$1" -i bash -c '
        PATH= source PKGBUILD

        if [[ -v epoch ]]; then
            fullver=$epoch:$pkgver-$pkgrel
        else
            fullver=$pkgver-$pkgrel
        fi

        printf "%s\\t%s\\n" "${pkgbase:-$pkgname}" "$fullver"
    '
}

find_pkgbuild_path() {
    find "$@" -maxdepth 1 -type f -name PKGBUILD -printf '%h\n'
}

readonly -f get_pkgbuild_info find_pkgbuild_path

makepkg_log=$(mktemp -t makepkg.XXXXXXXX) || exit
trap 'rm $makepkg_log' EXIT

# trickery for hyphen and absolute path arguments
mapfile -t arg_path < <(readlink -e -- "$@")

find_pkgbuild_path "${arg_path[@]}" | while read -r; do
    cd "$REPLY"

    if makepkg --noprepare -od >"$makepkg_log" 2>&1; then
        get_pkgbuild_info "$REPLY"
    else
        printf >&2 '%s: error on package %s\n' "$argv0" "$REPLY"
        printf >&2 '8<----\n'

        # XXX exit code
        cat "$makepkg_log"; break
    fi
done

# vim: set et sw=4 sts=4 ft=sh:
